AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: access-log-lambda

Parameters:
  AccessLogBucketName:
    Type: String
    Default: 'chunnoo-test-bucket'

  LoggingBucketName:
    Type: String
    Default: 'access-log-logging-bucket'

  PrivateKeyParameterName:
    Type: String
    Default: 'AccessLogPrivateKey'

Resources:
  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref LoggingBucketName

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: LoggingBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource:
              !Sub |-
                arn:aws:s3:::${LoggingBucket}
          -
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              !Sub |-
                arn:aws:s3:::${LoggingBucket}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"

  AccessLogCloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn:
      - BucketPolicy
    Properties:
      TrailName: !Ref LoggingBucketName
      S3BucketName:
        Ref: LoggingBucket
      IsLogging: true
      IsMultiRegionTrail: false
      EventSelectors:
        - IncludeManagementEvents: false
          DataResources:
          - Type: AWS::S3::Object
            Values:
              - !Sub |-
                arn:aws:s3:::${AccessLogBucketName}/
      IncludeGlobalServiceEvents: false

  AccessLogFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Timeout: 10
      CodeUri: ./access-log
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref AccessLogBucketName
        - SSMParameterReadPolicy:
            ParameterName: !Ref PrivateKeyParameterName
    Metadata:
      DockerTag: nodejs14.x-v1
      DockerContext: ./access-log
      Dockerfile: Dockerfile

  AccessLogPutEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "AccessLogPutEventRule"
      State: "ENABLED"
      EventPattern:
        source:
          - "aws.s3"
        detail:
          eventName:
            - "PutObject"
          requestParameters:
            bucketName:
              - !Ref AccessLogBucketName
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "AccessLogFunction"
              - "Arn"
          Id: "AccessLogFunctionTarget"

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "AccessLogFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "AccessLogPutEventRule"
          - "Arn"
